/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./cartridges/int_turnto_sfra_v5/cartridge/client/default/js/cart/cart.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./cartridges/int_turnto_sfra_v5/cartridge/client/default/js/cart/cart.js":
/*!********************************************************************************!*\
  !*** ./cartridges/int_turnto_sfra_v5/cartridge/client/default/js/cart/cart.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar base = __webpack_require__(/*! ./cart */ \"./cartridges/int_turnto_sfra_v5/cartridge/client/default/js/cart/cart.js\");\r\n\r\n/**\r\n * appends params to a url\r\n * @param {string} url - Original url\r\n * @param {Object} params - Parameters to append\r\n * @returns {string} result url with appended parameters\r\n */\r\nfunction appendToUrl(url, params) {\r\n    var newUrl = url;\r\n    newUrl += (newUrl.indexOf('?') !== -1 ? '&' : '?') + Object.keys(params).map(function (key) {\r\n        return key + '=' + encodeURIComponent(params[key]);\r\n    }).join('&');\r\n\r\n    return newUrl;\r\n}\r\n\r\n/**\r\n * Checks whether the basket is valid. if invalid displays error message and disables\r\n * checkout button\r\n * @param {Object} data - AJAX response from the server\r\n */\r\nfunction validateBasket(data) {\r\n    if (data.valid.error) {\r\n        if (data.valid.message) {\r\n            var errorHtml = '<div class=\"alert alert-danger alert-dismissible valid-cart-error ' +\r\n                'fade show\" role=\"alert\">' +\r\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\r\n                '<span aria-hidden=\"true\">&times;</span>' +\r\n                '</button>' + data.valid.message + '</div>';\r\n\r\n            $('.cart-error').append(errorHtml);\r\n        } else {\r\n            $('.cart').empty().append('<div class=\"row\"> ' +\r\n                '<div class=\"col-12 text-center\"> ' +\r\n                '<h1>' + data.resources.emptyCartMsg + '</h1> ' +\r\n                '</div> ' +\r\n                '</div>'\r\n            );\r\n            $('.number-of-items').empty().append(data.resources.numberOfItems);\r\n            $('.minicart-quantity').empty().append(data.numItems);\r\n            $('.minicart .popover').empty();\r\n            $('.minicart .popover').removeClass('show');\r\n        }\r\n\r\n        $('.checkout-btn').addClass('disabled');\r\n    } else {\r\n        $('.checkout-btn').removeClass('disabled');\r\n    }\r\n}\r\n\r\n/**\r\n * re-renders the order totals and the number of items in the cart\r\n * @param {Object} data - AJAX response from the server\r\n */\r\nfunction updateCartTotals(data) {\r\n    $('.number-of-items').empty().append(data.resources.numberOfItems);\r\n    $('.shipping-cost').empty().append(data.totals.totalShippingCost);\r\n    $('.tax-total').empty().append(data.totals.totalTax);\r\n    $('.grand-total').empty().append(data.totals.grandTotal);\r\n    $('.sub-total').empty().append(data.totals.subTotal);\r\n    $('.minicart-quantity').empty().append(data.numItems);\r\n\r\n    if (data.totals.orderLevelDiscountTotal.value > 0) {\r\n        $('.order-discount').removeClass('hide-order-discount');\r\n        $('.order-discount-total').empty()\r\n            .append('- ' + data.totals.orderLevelDiscountTotal.formatted);\r\n    } else {\r\n        $('.order-discount').addClass('hide-order-discount');\r\n    }\r\n\r\n    if (data.totals.shippingLevelDiscountTotal.value > 0) {\r\n        $('.shipping-discount').removeClass('hide-shipping-discount');\r\n        $('.shipping-discount-total').empty().append('- ' +\r\n            data.totals.shippingLevelDiscountTotal.formatted);\r\n    } else {\r\n        $('.shipping-discount').addClass('hide-shipping-discount');\r\n    }\r\n\r\n    data.items.forEach(function (item) {\r\n        $('.item-' + item.UUID).empty().append(item.renderedPromotions);\r\n        $('.item-total-' + item.UUID).empty().append(item.priceTotal.renderedPrice);\r\n    });\r\n}\r\n\r\n/**\r\n * re-renders the order totals and the number of items in the cart\r\n * @param {Object} message - Error message to display\r\n */\r\nfunction createErrorNotification(message) {\r\n    var errorHtml = '<div class=\"alert alert-danger alert-dismissible valid-cart-error ' +\r\n        'fade show\" role=\"alert\">' +\r\n        '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\r\n        '<span aria-hidden=\"true\">&times;</span>' +\r\n        '</button>' + message + '</div>';\r\n\r\n    $('.cart-error').append(errorHtml);\r\n}\r\n\r\n/**\r\n * re-renders the approaching discount messages\r\n * @param {Object} approachingDiscounts - updated approaching discounts for the cart\r\n */\r\nfunction updateApproachingDiscounts(approachingDiscounts) {\r\n    var html = '';\r\n    $('.approaching-discounts').empty();\r\n    if (approachingDiscounts.length > 0) {\r\n        approachingDiscounts.forEach(function (item) {\r\n            html += '<div class=\"single-approaching-discount text-center\">'\r\n                + item.discountMsg + '</div>';\r\n        });\r\n    }\r\n    $('.approaching-discounts').append(html);\r\n}\r\n\r\n/**\r\n * Updates the availability of a product line item\r\n * @param {Object} data - AJAX response from the server\r\n * @param {string} uuid - The uuid of the product line item to update\r\n */\r\nfunction updateAvailability(data, uuid) {\r\n    var lineItem;\r\n    var messages = '';\r\n\r\n    for (var i = 0; i < data.items.length; i++) {\r\n        if (data.items[i].UUID === uuid) {\r\n            lineItem = data.items[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    $('.availability-' + lineItem.UUID).empty();\r\n\r\n    if (lineItem.availability) {\r\n        if (lineItem.availability.messages) {\r\n            lineItem.availability.messages.forEach(function (message) {\r\n                messages += '<p class=\"line-item-attributes\">' + message + '</p>';\r\n            });\r\n        }\r\n\r\n        if (lineItem.availability.inStockDate) {\r\n            messages += '<p class=\"line-item-attributes line-item-instock-date\">'\r\n                + lineItem.availability.inStockDate\r\n                + '</p>';\r\n        }\r\n    }\r\n\r\n    $('.availability-' + lineItem.UUID).html(messages);\r\n}\r\n\r\n/**\r\n * Finds an element in the array that matches search parameter\r\n * @param {array} array - array of items to search\r\n * @param {function} match - function that takes an element and returns a boolean indicating if the match is made\r\n * @returns {Object|null} - returns an element of the array that matched the query.\r\n */\r\nfunction findItem(array, match) {\r\n    for (var i = 0, l = array.length; i < l; i++) {\r\n        if (match.call(this, array[i])) {\r\n            return array[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Updates details of a product line item\r\n * @param {Object} data - AJAX response from the server\r\n * @param {string} uuid - The uuid of the product line item to update\r\n */\r\nfunction updateProductDetails(data, uuid) {\r\n    var lineItem = findItem(data.cartModel.items, function (item) {\r\n        return item.UUID === uuid;\r\n    });\r\n\r\n    if (lineItem.variationAttributes) {\r\n        var colorAttr = findItem(lineItem.variationAttributes, function (attr) {\r\n            return attr.attributeId === 'color';\r\n        });\r\n\r\n        if (colorAttr) {\r\n            var colorSelector = '.Color-' + uuid;\r\n            var newColor = 'Color: ' + colorAttr.displayValue;\r\n            $(colorSelector).text(newColor);\r\n        }\r\n\r\n        var sizeAttr = findItem(lineItem.variationAttributes, function (attr) {\r\n            return attr.attributeId === 'size';\r\n        });\r\n\r\n        if (sizeAttr) {\r\n            var sizeSelector = '.Size-' + uuid;\r\n            var newSize = 'Size: ' + sizeAttr.displayValue;\r\n            $(sizeSelector).text(newSize);\r\n        }\r\n\r\n        var imageSelector = '.card.product-info.uuid-' + uuid + ' .item-image > img';\r\n        $(imageSelector).attr('src', lineItem.images.small[0].url);\r\n        $(imageSelector).attr('alt', lineItem.images.small[0].alt);\r\n        $(imageSelector).attr('title', lineItem.images.small[0].title);\r\n    }\r\n\r\n    var qtySelector = '.quantity[data-uuid=\"' + uuid + '\"]';\r\n    $(qtySelector).val(lineItem.quantity);\r\n    $(qtySelector).data('pid', data.newProductId);\r\n\r\n    $('.remove-product[data-uuid=\"' + uuid + '\"]').data('pid', data.newProductId);\r\n\r\n    var priceSelector = '.line-item-price-' + uuid + ' .sales .value';\r\n    $(priceSelector).text(lineItem.price.sales.formatted);\r\n    $(priceSelector).attr('content', lineItem.price.sales.decimalPrice);\r\n\r\n    if (lineItem.price.list) {\r\n        var listPriceSelector = '.line-item-price-' + uuid + ' .list .value';\r\n        $(listPriceSelector).text(lineItem.price.list.formatted);\r\n        $(listPriceSelector).attr('content', lineItem.price.list.decimalPrice);\r\n    }\r\n}\r\n\r\n/**\r\n * Generates the modal window on the first call.\r\n *\r\n */\r\nfunction getModalHtmlElement() {\r\n    if ($('#editProductModal').length !== 0) {\r\n        $('#editProductModal').remove();\r\n    }\r\n    var htmlString = '<!-- Modal -->'\r\n        + '<div class=\"modal fade\" id=\"editProductModal\" role=\"dialog\">'\r\n        + '<div class=\"modal-dialog quick-view-dialog\">'\r\n        + '<!-- Modal content-->'\r\n        + '<div class=\"modal-content\">'\r\n        + '<div class=\"modal-header\">'\r\n        + '    <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\">'\r\n        + '        &times;'\r\n        + '    </button>'\r\n        + '</div>'\r\n        + '<div class=\"modal-body\"></div>'\r\n        + '<div class=\"modal-footer\"></div>'\r\n        + '</div>'\r\n        + '</div>'\r\n        + '</div>';\r\n    $('body').append(htmlString);\r\n}\r\n\r\n/**\r\n * Parses the html for a modal window\r\n * @param {string} html - representing the body and footer of the modal window\r\n *\r\n * @return {Object} - Object with properties body and footer.\r\n */\r\nfunction parseHtml(html) {\r\n    var $html = $('<div>').append($.parseHTML(html));\r\n\r\n    var body = $html.find('.product-quickview');\r\n    var footer = $html.find('.modal-footer').children();\r\n\r\n    return { body: body, footer: footer };\r\n}\r\n\r\n/**\r\n * replaces the content in the modal window for product variation to be edited.\r\n * @param {string} editProductUrl - url to be used to retrieve a new product model\r\n */\r\nfunction fillModalElement(editProductUrl) {\r\n    $('.modal-body').spinner().start();\r\n    $.ajax({\r\n        url: editProductUrl,\r\n        method: 'GET',\r\n        dataType: 'html',\r\n        success: function (html) {\r\n            var parsedHtml = parseHtml(html);\r\n\r\n            $('#editProductModal .modal-body').empty();\r\n            $('#editProductModal .modal-body').html(parsedHtml.body);\r\n            $('#editProductModal .modal-footer').html(parsedHtml.footer);\r\n            $('#editProductModal').modal('show');\r\n            $.spinner().stop();\r\n        },\r\n        error: function () {\r\n            $.spinner().stop();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * replace content of modal\r\n * @param {string} actionUrl - url to be used to remove product\r\n * @param {string} productID - pid\r\n * @param {string} productName - product name\r\n * @param {string} uuid - uuid\r\n */\r\nfunction confirmDelete(actionUrl, productID, productName, uuid) {\r\n    var $deleteConfirmBtn = $('.cart-delete-confirmation-btn');\r\n    var $productToRemoveSpan = $('.product-to-remove');\r\n\r\n    $deleteConfirmBtn.data('pid', productID);\r\n    $deleteConfirmBtn.data('action', actionUrl);\r\n    $deleteConfirmBtn.data('uuid', uuid);\r\n\r\n    $productToRemoveSpan.empty().append(productName);\r\n}\r\n\r\nmodule.exports = function () {\r\n    $('body').on('click', '.remove-product', function (e) {\r\n        e.preventDefault();\r\n\r\n        var actionUrl = $(this).data('action');\r\n        var productID = $(this).data('pid');\r\n        var productName = $(this).data('name');\r\n        var uuid = $(this).data('uuid');\r\n        confirmDelete(actionUrl, productID, productName, uuid);\r\n    });\r\n\r\n    $('body').on('afterRemoveFromCart', function (e, data) {\r\n        e.preventDefault();\r\n        confirmDelete(data.actionUrl, data.productID, data.productName, data.uuid);\r\n    });\r\n\r\n    $('.optional-promo').click(function (e) {\r\n        e.preventDefault();\r\n        $('.promo-code-form').toggle();\r\n    });\r\n\r\n    $('body').on('click', '.cart-delete-confirmation-btn', function (e) {\r\n        e.preventDefault();\r\n\r\n        var productID = $(this).data('pid');\r\n        var url = $(this).data('action');\r\n        var uuid = $(this).data('uuid');\r\n        var urlParams = {\r\n            pid: productID,\r\n            uuid: uuid\r\n        };\r\n\r\n        url = appendToUrl(url, urlParams);\r\n\r\n        $('body > .modal-backdrop').remove();\r\n\r\n        $.spinner().start();\r\n        $.ajax({\r\n            url: url,\r\n            type: 'get',\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                if (data.basket.items.length === 0) {\r\n                    $('.cart').empty().append('<div class=\"row\"> ' +\r\n                        '<div class=\"col-12 text-center\"> ' +\r\n                        '<h1>' + data.basket.resources.emptyCartMsg + '</h1> ' +\r\n                        '</div> ' +\r\n                        '</div>'\r\n                    );\r\n                    $('.number-of-items').empty().append(data.basket.resources.numberOfItems);\r\n                    $('.minicart-quantity').empty().append(data.basket.numItems);\r\n                    $('.minicart .popover').empty();\r\n                    $('.minicart .popover').removeClass('show');\r\n                    $('body').removeClass('modal-open');\r\n                    $('html').removeClass('veiled');\r\n                } else {\r\n                    if (data.toBeDeletedUUIDs && data.toBeDeletedUUIDs.length > 0) {\r\n                        for (var i = 0; i < data.toBeDeletedUUIDs.length; i++) {\r\n                            $('.uuid-' + data.toBeDeletedUUIDs[i]).remove();\r\n                        }\r\n                    }\r\n                    $('.uuid-' + uuid).remove();\r\n                    if (!data.basket.hasBonusProduct) {\r\n                        $('.bonus-product').remove();\r\n                    }\r\n                    $('.coupons-and-promos').empty().append(data.basket.totals.discountsHtml);\r\n                    updateCartTotals(data.basket);\r\n                    updateApproachingDiscounts(data.basket.approachingDiscounts);\r\n                    $('body').trigger('setShippingMethodSelection', data.basket);\r\n                    validateBasket(data.basket);\r\n                }\r\n                $.spinner().stop();\r\n            },\r\n            error: function (err) {\r\n                if (err.responseJSON.redirectUrl) {\r\n                    window.location.href = err.responseJSON.redirectUrl;\r\n                } else {\r\n                    createErrorNotification(err.responseJSON.errorMessage);\r\n                    $.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    $('body').on('change', '.quantity-form > .quantity', function () {\r\n        var preSelectQty = $(this).data('pre-select-qty');\r\n        var quantity = $(this).val();\r\n        var productID = $(this).data('pid');\r\n        var url = $(this).data('action');\r\n        var uuid = $(this).data('uuid');\r\n\r\n        var urlParams = {\r\n            pid: productID,\r\n            quantity: quantity,\r\n            uuid: uuid\r\n        };\r\n        url = appendToUrl(url, urlParams);\r\n\r\n        $(this).parents('.card').spinner().start();\r\n\r\n        $.ajax({\r\n            url: url,\r\n            type: 'get',\r\n            context: this,\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                $('.quantity[data-uuid=\"' + uuid + '\"]').val(quantity);\r\n                $('.coupons-and-promos').empty().append(data.totals.discountsHtml);\r\n                updateCartTotals(data);\r\n                updateApproachingDiscounts(data.approachingDiscounts);\r\n                updateAvailability(data, uuid);\r\n                validateBasket(data);\r\n                $(this).data('pre-select-qty', quantity);\r\n                $.spinner().stop();\r\n                if ($(this).parents('.product-info').hasClass('bonus-product-line-item') && $('.cart-page').length) {\r\n                    location.reload();\r\n                }\r\n            },\r\n            error: function (err) {\r\n                if (err.responseJSON.redirectUrl) {\r\n                    window.location.href = err.responseJSON.redirectUrl;\r\n                } else {\r\n                    createErrorNotification(err.responseJSON.errorMessage);\r\n                    $(this).val(parseInt(preSelectQty, 10));\r\n                    $.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    $('.shippingMethods').change(function () {\r\n        var url = $(this).attr('data-actionUrl');\r\n        var urlParams = {\r\n            methodID: $(this).find(':selected').attr('data-shipping-id')\r\n        };\r\n        // url = appendToUrl(url, urlParams);\r\n\r\n        $('.totals').spinner().start();\r\n        $.ajax({\r\n            url: url,\r\n            type: 'post',\r\n            dataType: 'json',\r\n            data: urlParams,\r\n            success: function (data) {\r\n                if (data.error) {\r\n                    window.location.href = data.redirectUrl;\r\n                } else {\r\n                    $('.coupons-and-promos').empty().append(data.totals.discountsHtml);\r\n                    updateCartTotals(data);\r\n                    updateApproachingDiscounts(data.approachingDiscounts);\r\n                    validateBasket(data);\r\n                }\r\n                $.spinner().stop();\r\n            },\r\n            error: function (err) {\r\n                if (err.redirectUrl) {\r\n                    window.location.href = err.redirectUrl;\r\n                } else {\r\n                    createErrorNotification(err.responseJSON.errorMessage);\r\n                    $.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    $('.promo-code-form').submit(function (e) {\r\n        e.preventDefault();\r\n        $.spinner().start();\r\n        $('.coupon-missing-error').hide();\r\n        $('.coupon-error-message').empty();\r\n        if (!$('.coupon-code-field').val()) {\r\n            $('.promo-code-form .form-control').addClass('is-invalid');\r\n            $('.coupon-missing-error').show();\r\n            $.spinner().stop();\r\n            return false;\r\n        }\r\n        var $form = $('.promo-code-form');\r\n        $('.promo-code-form .form-control').removeClass('is-invalid');\r\n        $('.coupon-error-message').empty();\r\n\r\n        $.ajax({\r\n            url: $form.attr('action'),\r\n            type: 'GET',\r\n            dataType: 'json',\r\n            data: $form.serialize(),\r\n            success: function (data) {\r\n                if (data.error) {\r\n                    $('.promo-code-form .form-control').addClass('is-invalid');\r\n                    $('.coupon-error-message').empty().append(data.errorMessage);\r\n                } else {\r\n                    $('.coupons-and-promos').empty().append(data.totals.discountsHtml);\r\n                    updateCartTotals(data);\r\n                    updateApproachingDiscounts(data.approachingDiscounts);\r\n                    validateBasket(data);\r\n                }\r\n                $('.coupon-code-field').val('');\r\n                $.spinner().stop();\r\n            },\r\n            error: function (err) {\r\n                if (err.responseJSON.redirectUrl) {\r\n                    window.location.href = err.responseJSON.redirectUrl;\r\n                } else {\r\n                    createErrorNotification(err.errorMessage);\r\n                    $.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n        return false;\r\n    });\r\n\r\n    $('body').on('click', '.remove-coupon', function (e) {\r\n        e.preventDefault();\r\n\r\n        var couponCode = $(this).data('code');\r\n        var uuid = $(this).data('uuid');\r\n        var $deleteConfirmBtn = $('.delete-coupon-confirmation-btn');\r\n        var $productToRemoveSpan = $('.coupon-to-remove');\r\n\r\n        $deleteConfirmBtn.data('uuid', uuid);\r\n        $deleteConfirmBtn.data('code', couponCode);\r\n\r\n        $productToRemoveSpan.empty().append(couponCode);\r\n    });\r\n\r\n    $('body').on('click', '.delete-coupon-confirmation-btn', function (e) {\r\n        e.preventDefault();\r\n\r\n        var url = $(this).data('action');\r\n        var uuid = $(this).data('uuid');\r\n        var couponCode = $(this).data('code');\r\n        var urlParams = {\r\n            code: couponCode,\r\n            uuid: uuid\r\n        };\r\n\r\n        url = appendToUrl(url, urlParams);\r\n\r\n        $('body > .modal-backdrop').remove();\r\n\r\n        $.spinner().start();\r\n        $.ajax({\r\n            url: url,\r\n            type: 'get',\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                $('.coupon-uuid-' + uuid).remove();\r\n                updateCartTotals(data);\r\n                updateApproachingDiscounts(data.approachingDiscounts);\r\n                validateBasket(data);\r\n                $.spinner().stop();\r\n            },\r\n            error: function (err) {\r\n                if (err.responseJSON.redirectUrl) {\r\n                    window.location.href = err.responseJSON.redirectUrl;\r\n                } else {\r\n                    createErrorNotification(err.responseJSON.errorMessage);\r\n                    $.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n    });\r\n    $('body').on('click', '.cart-page .bonus-product-button', function () {\r\n        $.spinner().start();\r\n        $.ajax({\r\n            url: $(this).data('url'),\r\n            method: 'GET',\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                base.methods.editBonusProducts(data);\r\n                $.spinner().stop();\r\n            },\r\n            error: function () {\r\n                $.spinner().stop();\r\n            }\r\n        });\r\n    });\r\n    $('body').on('click', '.cart-page .product-edit .edit, .cart-page .bundle-edit .edit', function (e) {\r\n        e.preventDefault();\r\n\r\n        var editProductUrl = $(this).attr('href');\r\n        getModalHtmlElement();\r\n        fillModalElement(editProductUrl);\r\n    });\r\n\r\n    $('body').on('product:updateAddToCart', function (e, response) {\r\n        // update global add to cart (single products, bundles)\r\n        var dialog = $(response.$productContainer)\r\n            .closest('.quick-view-dialog');\r\n\r\n        $('.update-cart-product-global', dialog).attr('disabled',\r\n            !$('.global-availability', dialog).data('ready-to-order')\r\n            || !$('.global-availability', dialog).data('available')\r\n        );\r\n    });\r\n\r\n    $('body').on('product:updateAvailability', function (e, response) {\r\n        // bundle individual products\r\n        $('.product-availability', response.$productContainer)\r\n            .data('ready-to-order', response.product.readyToOrder)\r\n            .data('available', response.product.available)\r\n            .find('.availability-msg')\r\n            .empty()\r\n            .html(response.message);\r\n\r\n\r\n        var dialog = $(response.$productContainer)\r\n            .closest('.quick-view-dialog');\r\n\r\n        if ($('.product-availability', dialog).length) {\r\n            // bundle all products\r\n            var allAvailable = $('.product-availability', dialog).toArray()\r\n                .every(function (item) { return $(item).data('available'); });\r\n\r\n            var allReady = $('.product-availability', dialog).toArray()\r\n                .every(function (item) { return $(item).data('ready-to-order'); });\r\n\r\n            $('.global-availability', dialog)\r\n                .data('ready-to-order', allReady)\r\n                .data('available', allAvailable);\r\n\r\n            $('.global-availability .availability-msg', dialog).empty()\r\n                .html(allReady ? response.message : response.resources.info_selectforstock);\r\n        } else {\r\n            // single product\r\n            $('.global-availability', dialog)\r\n                .data('ready-to-order', response.product.readyToOrder)\r\n                .data('available', response.product.available)\r\n                .find('.availability-msg')\r\n                .empty()\r\n                .html(response.message);\r\n        }\r\n    });\r\n\r\n    $('body').on('product:afterAttributeSelect', function (e, response) {\r\n        if ($('.modal.show .product-quickview .bundle-items').length) {\r\n            $('.modal.show').find(response.container).data('pid', response.data.product.id);\r\n            $('.modal.show').find(response.container).find('.product-id').text(response.data.product.id);\r\n        } else {\r\n            $('.modal.show .product-quickview').data('pid', response.data.product.id);\r\n        }\r\n        TurnToCmd('set', {'sku': response.data.product.id});\r\n    });\r\n\r\n    $('body').on('change', '.quantity-select', function () {\r\n        var selectedQuantity = $(this).val();\r\n        $('.modal.show .update-cart-url').data('selected-quantity', selectedQuantity);\r\n    });\r\n\r\n    $('body').on('click', '.update-cart-product-global', function (e) {\r\n        e.preventDefault();\r\n\r\n        var updateProductUrl = $(this).closest('.cart-and-ipay').find('.update-cart-url').val();\r\n        var selectedQuantity = $(this).closest('.cart-and-ipay').find('.update-cart-url').data('selected-quantity');\r\n        var uuid = $(this).closest('.cart-and-ipay').find('.update-cart-url').data('uuid');\r\n\r\n        var form = {\r\n            uuid: uuid,\r\n            pid: base.getPidValue($(this)),\r\n            quantity: selectedQuantity\r\n        };\r\n\r\n        $(this).parents('.card').spinner().start();\r\n        if (updateProductUrl) {\r\n            $.ajax({\r\n                url: updateProductUrl,\r\n                type: 'post',\r\n                context: this,\r\n                data: form,\r\n                dataType: 'json',\r\n                success: function (data) {\r\n                    $('#editProductModal').remove();\r\n                    $('.modal-backdrop').remove();\r\n                    $('body').removeClass('modal-open');\r\n\r\n                    $('.coupons-and-promos').empty().append(data.cartModel.totals.discountsHtml);\r\n                    updateCartTotals(data.cartModel);\r\n                    updateApproachingDiscounts(data.cartModel.approachingDiscounts);\r\n                    updateAvailability(data.cartModel, uuid);\r\n                    updateProductDetails(data, uuid);\r\n\r\n                    if (data.uuidToBeDeleted) {\r\n                        $('.uuid-' + data.uuidToBeDeleted).remove();\r\n                    }\r\n\r\n                    validateBasket(data.cartModel);\r\n\r\n                    $.spinner().stop();\r\n                },\r\n                error: function (err) {\r\n                    if (err.responseJSON.redirectUrl) {\r\n                        window.location.href = err.responseJSON.redirectUrl;\r\n                    } else {\r\n                        createErrorNotification(err.responseJSON.errorMessage);\r\n                        $.spinner().stop();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    base.selectAttribute();\r\n    base.colorAttribute();\r\n    base.removeBonusProduct();\r\n    base.selectBonusProduct();\r\n    base.enableBonusProductSelection();\r\n    base.showMoreBonusProducts();\r\n    base.addBonusProductsToCart();\r\n};\r\n\n\n//# sourceURL=webpack:///./cartridges/int_turnto_sfra_v5/cartridge/client/default/js/cart/cart.js?");

/***/ })

/******/ });